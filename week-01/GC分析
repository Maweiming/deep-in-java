2020-10-29T21:19:19.488+0800: 114.015: [GC (CMS Initial Mark) [1 CMS-initial-mark: 106000K(2097152K)] 1084619K(3984640K), 0.2824583 secs] [Times: user=0.86 sys=0.00, real=0.28 secs]
#CMS Initial Mark 表示初始标记；106000K表示老年代已使用的内存；2097152K表示老年代可用的内存；1084619K表示当前堆的大小；3984640K表示堆的总大小
2020-10-29T21:19:19.771+0800: 114.298: [CMS-concurrent-mark-start]
#并发标记阶段开始
2020-10-29T21:19:19.931+0800: 114.458: [CMS-concurrent-mark: 0.160/0.160 secs] [Times: user=0.32 sys=0.03, real=0.16 secs]
#并发标记 会遍历老年代标记存活的对象；#concurrent-mark花费了0.16s cpu time 和 0.16s 系统时间
2020-10-29T21:19:19.931+0800: 114.459: [CMS-concurrent-preclean-start]
#并发预清理阶段开始
2020-10-29T21:19:19.998+0800: 114.525: [CMS-concurrent-preclean: 0.065/0.066 secs] [Times: user=0.05 sys=0.01, real=0.06 secs]
#并发预清理阶段耗时 0.065s cpu time 和 0.066s 系统时间
2020-10-29T21:19:19.998+0800: 114.525: [CMS-concurrent-abortable-preclean-start]CMS: abort preclean due to time
#可终止的并发预清理；这个阶段是为了尽量承担 STW 中最终标记阶段的工作
2020-10-29T21:19:25.072+0800: 119.599: [CMS-concurrent-abortable-preclean: 5.038/5.073 secs] [Times: user=7.72 sys=0.50, real=5.08 secs]
#可终止的并发预清理；5.038 耗时
2020-10-29T21:19:25.076+0800: 119.603: [GC (CMS Final Remark) [YG occupancy: 1279357 K (1887488 K)]
#最终标记阶段；第二次 STW 阶段；这个阶段的目标是标记所有老年代所有的存活对象，由于之前的阶段是并发执行的，gc 线程可能跟不上应用程序的变化，为了完成标记老年代所有存活对象的目标；这个步骤系统会卡顿
#后面的YG occupancy 表示当前占用量及容量
2020-10-29T21:19:25.076+0800: 119.603: [Rescan (parallel) , 0.3120602 secs]
#Rescan 是当应用暂停的情况下完成对所有存活对象的标记，这个阶段是并行处理的，这里花费了 0.3120602s；
2020-10-29T21:19:25.388+0800: 119.915: [weak refs processing, 0.0015920 secs]
#阶段1；弱引用处理，后面的是耗时
2020-10-29T21:19:25.390+0800: 119.917: [class unloading, 0.0517863 secs]
#阶段2；卸载无用类，后面的是耗时
2020-10-29T21:19:25.441+0800: 119.969: [scrub symbol table, 0.0212825 secs]
#阶段3；清理类级元数据和内部化字符串的符号表和字符串表
2020-10-29T21:19:25.463+0800: 119.990: [scrub string table, 0.0022435 secs][1 CMS-remark: 106000K(2097152K)] 1385358K(3984640K), 0.3959182 secs] [Times: user=1.33 sys=0.00, real=0.40 secs]
#106000K(2097152K) 表示老年代的使用量和总量；1385358K(3984640K)堆的使用量和总量；后面的是耗时时间
2020-10-29T21:19:25.473+0800: 120.000: [CMS-concurrent-sweep-start]
#并发清除阶段开始；这个阶段会清除那些不再使用的对象；回收它们的占用空间为将来使用
2020-10-29T21:19:25.540+0800: 120.067: [CMS-concurrent-sweep: 0.067/0.067 secs] [Times: user=0.18 sys=0.02, real=0.06 secs]
#并发清除阶段耗时
2020-10-29T21:19:25.540+0800: 120.068: [CMS-concurrent-reset-start]
#并发重置阶段开始；这个阶段也是并发执行的；它会重设CMS内部的数据结构；为下次的GC做准备
2020-10-29T21:19:25.544+0800: 120.071: [CMS-concurrent-reset: 0.003/0.003 secs] [Times: user=0.00 sys=0.00, real=0.01 secs]
#并发重置阶段耗时